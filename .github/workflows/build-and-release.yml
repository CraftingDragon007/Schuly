name: Build and Release Flutter Apps

on:
  release:
    types: [published]
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.x'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: |
          cd schuly
          flutter pub get

      - name: Generate app icons
        run: |
          cd schuly
          dart run flutter_launcher_icons

      - name: Build Android APK
        run: |
          cd schuly
          flutter build apk --release

      - name: Rename and upload APK
        run: |
          mkdir -p artifacts
          cp schuly/build/app/outputs/flutter-apk/app-release.apk artifacts/schuly.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: artifacts/schuly.apk

  build-ios:
    runs-on: macos-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.x'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: |
          cd schuly
          flutter pub get

      - name: Generate app icons
        run: |
          cd schuly
          dart run flutter_launcher_icons

      - name: Build iOS (unsigned)
        run: |
          cd schuly
          flutter build ios --release --no-codesign

      - name: Create iOS Archive
        run: |
          cd schuly/ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination generic/platform=iOS -archivePath build/Runner.xcarchive archive CODE_SIGNING_ALLOWED=NO

      - name: Export iOS IPA
        run: |
          cd schuly/ios
          mkdir -p artifacts
          mkdir -p build/ipa
          cp -r build/Runner.xcarchive/Products/Applications/Runner.app build/ipa/
          cd build/ipa
          zip -r ../../artifacts/schuly.ipa Runner.app

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: schuly/ios/artifacts/schuly.ipa

  upload-to-release:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Upload Assets to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android-build/schuly.apk
            ios-build/schuly.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}